# projet créé le 19 nov 2023



SCENARIO :

    notre perso est un hacker qui vit dans les souterrains d'une ville apocalyptique zombiesque dystopiak
    il voit une pub à la télé de super pates et a envie de manger des pates

    il se lève donc et va acheter des pates, sauf que ça lui prend mille ans de remonter à la surface lol

    dès qu'il croise une forme de vie il demande si iel a pas des pates



HACKIN :

    différentes bases de bits nécessaires pour hacker
    
    - zombo   : 2 bits
    - porte   : 4 bits
    - ordi    : 6 bits
    - parefeu : 8 bits

    ces bits nécessaires augmentent exponentiellement en fonction du niveau
    (required_bits = base_bits * 2^(level-1))

    exemple :
    - ordi  niv 2 : 12 bits
    - ordi  niv 3 : 24 bits nécessaires
    - zombo niv 2 : 4 bits
    - zombo niv 3 : 8 bits


SKILLTREES :

    notre perso progresse petit à petit.
    au fur et à mesure de sa progression, plusieurs stats vont se modifier pour
    caractériser la montée de niveau du perso.

    ces stats sont réparties en plusieurs catégories et
    s'améliorent via différents systèmes de jeu :

    notamment :

    catégorie physique :
        - max_vie
        - regen_vie
        - degats
        - vitesse de déplacement

    catégorie virtuelle :
        - max_bits
        - regen_bits
        - portée de hack


    ces stats sont augmentées via 2 arbres de compétences séparés :

    - à chaque montée de niveau on peut augmenter une stat physique
    - dès qu'on trouve un ordinateur on peut augmenter n stats virtuelles où n est le niveau de l'ordi.

    les ordinateurs doivent être hackés pour accéder à la récompense.


TYPE DE SECTEURS :

    CC - controle center. salle centrale où toutes les sécurités sont appliquées. boss
    
    F  - salle Firewall contenant un parefeu à désactiver pour baisser la sécurité informatique de la CC
         désactiver un parefeu augmente cependant le nombre d'ennemis et le niveau du boss final

    CO  - salle Computer. Contient un ordi et nous permet d'augmenter nos skills virtuels

    CH - salle Chest. contient des items physiques

    SE - salle Serveur. contient des serveurs, et donc des items virtuels

    HK - salle Hacker. Permet de rencontrer un petit hacker comme nous qui augmente le niveau de nos hacks

    A  - salle Anarchy. Lieu sans zombie où y'a une communauté de gens qui vivent. Tu peux leur acheter des items
        (mais pas de pates), et augmenter le niveau de tes items physiques
    
    QG - notre QG. aussi la salle de spawn. début de chaque run

    HA - grand Hall vide avec des trucs et beaucoup de zombooooos

SECTEURS ADITIONNELS

    DOG - sector avec des animaux cybernetiques abandonnés
    BIB - secteur bibliothèque. amène vers l'océan

PETITS SECTEURS UNIQUES ADITIONNELS

    404 - 404 room
        boss post-final
        débloque un boss postgénérique qui nous attaque avec des erreurs de code
        le boss de l'internet
        permet de passer dans la matrice si ouverte
        la porte apparait après avoir achevé le dernier boss
        puis elle disparait ensuite
        et le but c'est de trouver sa position au bon moment pour pouvoir l'ouvrir
    


GENERATION PROCEDURALE 1E EBAUCHE :

    la génération du monde se fait en plusieurs étapes :

        - génération des rooms par World.cs
        - gestion des connections inter rooms (couloirs)
        - création des coffres, ordi, portes par World.cs
        - création des zones de spawn de zombies

        - "pavage" des tilemaps par Room.cs
        - "emblissement" des rooms par Room.cs (disposition d'objets poubelle dechets etc)
        - disposition d'items nécessaires dans les coffres
        - disposition d'items randoms cachés en mode clé usb dans les poubelles et tout
    

    1er choix d'algo :

        une generation full procedurale, qui crée des salles de tailles
        aléatoires et d'agencements aléatoires :

        avantages :
            -augmente la rejouabilité (donjon VR2MENT random)
            -moins de planification nécessaire
        
        inconvenients :
            -Rooms.cs hyper conséquente
            -possibilité de bugs de map plus grande
            -moins de salles et plus de couloirs ?
        
    2e choix d'algo :

        generation procédurale de salles, mais pas procédurale dans les salles

        avantages :
            -meilleur contrôle du level design
        
        inconvenients :
            -pré création de salles longue
            -configuration du World.cs personnalisé
            -peut-etre des salles repetitives


GENERATION PROCEDURALE 2E EBAUCHE :

    on crée des secteurs avant de créer les rooms.
    World.cs crée et organise les secteurs (cf types de secteurs plus haut)
    Sector.cs crée et organise ses propres rooms, items, etc
    Room.cs gère ses propres éléments décoratifs (posters, lights)

    algo :
        -World crée des Sector.
            -Il récup une List de Hashset obtenue via SectorGenerator (WalkMan algo)
            -On vérifie qu'un secteur relie toutes ses salles
        -World récupère les tailles des Sectors générés et créé un Schéma global du monde (TK Algo)
        -World définit quels sectors sont de quel type.
        -World retravaille les HashSet pour relier les secteurs (en ajoutant des corridors)
        -World lance la création finale en passant a chaque Sector son Hashset et sa position globale
            -si des rooms sont adjacentes -> ça fait une big room
            -Chaque Sector applique son type -> change les tiles de ses rooms
            -Chaque Sector applique son type -> gère les ennemis
            -Chaque Sector applique son type -> place des coffres, etc

MAP :

    voir les ranges

ARMES :

    katana
    shurikens
        tu peux les recup sur les zombies apres

ITEMS A RAJOUTER :

    item pour voir les zombies sur la map
    item pour voir l'ami drone


    lecteur mp3 vieux venus d'une autre epoque :
        rajoute une interface en bas à gauche
        qui te permet de choisir la musique que tu veux
        chaque musique apporte un petit boost en mode motivation techno
        les cds peuvent se trouver au camp des anar

