//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Inputs/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""perso"",
            ""id"": ""0b618132-4be4-4b59-a576-51538f00d6ab"",
            ""actions"": [
                {
                    ""name"": ""move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e3286fd1-c991-4227-bd74-d6aad86a17ec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""interact"",
                    ""type"": ""Button"",
                    ""id"": ""430686be-26cd-40e4-9321-059ac16b6dbd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""inventory"",
                    ""type"": ""Button"",
                    ""id"": ""fbfa0ea4-b180-4324-8049-589af83809b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""map"",
                    ""type"": ""Button"",
                    ""id"": ""2009546e-be2f-4aec-89d1-3576c067877c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""hit"",
                    ""type"": ""Button"",
                    ""id"": ""a71c9118-1699-4f9c-96b6-f90a0e6134e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""run"",
                    ""type"": ""Value"",
                    ""id"": ""0948f1ba-942c-47be-b02f-249a908482fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""useConso"",
                    ""type"": ""Button"",
                    ""id"": ""af9057fb-3fd3-4bb3-bb36-27d0f1b16911"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""randomTalk"",
                    ""type"": ""Button"",
                    ""id"": ""9ba0cfaf-4138-4dc5-9ba2-7ec2dbfdd46f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""pause"",
                    ""type"": ""Button"",
                    ""id"": ""21976488-dcb9-4123-ba3d-4f078f4ab76c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""main"",
                    ""id"": ""d48d2582-0d80-4f60-b3bc-261e78d34df8"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""107ac6e0-71c5-4cfd-ade8-fec0502fa4b9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""652468ed-c509-44f6-a039-792b1f96fd05"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""15671eb5-ea23-489a-a65a-4c96b3b848d3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""308568db-d22c-4c7f-ba99-6365f86071f0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""96585a0b-19a0-4a12-b30c-ee5c5664ed8c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dec4aeb-67cc-4e7d-8d4d-74dfc9ec75df"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a78382af-fd0b-4b13-a37d-a064cac28d6f"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b8675a6-6cd9-4cf1-8743-ce77cb1bd10d"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93b1a724-d3ff-4856-88c9-ac6ce6414518"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""hit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db59ca6f-ab5b-4fbc-a6f9-60c0feb7cddd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""hit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e26258b-b4ea-4ef6-a1eb-9a22f3f02dcf"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""493cb05f-36e7-4cc6-bca3-c7aa1148e65c"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75dfc87d-e548-4042-8a15-def507bbd239"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""useConso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9302c95f-072e-4189-9646-1b7b70d17571"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""useConso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c733c319-9b13-4a35-970c-ef0700b874a0"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f045da71-1f36-4421-b579-e1f39b4e2fc8"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c3a8f46-555c-4048-9390-4eff923ebcc7"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""randomTalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""caed2b77-a8cc-4ff6-a9c9-259965ac1618"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""randomTalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""834bd7bf-a313-4665-92f7-06e07653766b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac9d0505-9602-4253-9908-c99691b89d78"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5f2eabe-9fbb-4bd3-9d4f-6e7ad143896a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""eabb19b5-c974-4c9a-ba69-71b4bad173e5"",
            ""actions"": [
                {
                    ""name"": ""navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6081c15c-8c3f-4213-beb2-816695cc650c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""activate"",
                    ""type"": ""Button"",
                    ""id"": ""bfb0aa0c-6049-4ece-a264-cceaa2a55caa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3572067e-9738-49b0-b697-7f44a8028c52"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5bbfd291-7f88-4772-9484-02def75ea68a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f98d722-89bc-4fb1-aa77-d39c92400099"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40aa7c62-2967-4cd0-8d2d-b45ec65ebd01"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""enhanced_perso"",
            ""id"": ""496fb706-37aa-4ede-8ba7-f8a5dfa615a7"",
            ""actions"": [
                {
                    ""name"": ""dash"",
                    ""type"": ""Button"",
                    ""id"": ""a9789480-6c9d-480f-aa99-098e4a684ac2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""dodge"",
                    ""type"": ""Button"",
                    ""id"": ""42dc8ca9-9da3-4420-a502-34d5c93f9b6f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""hack"",
                    ""type"": ""Button"",
                    ""id"": ""7ccb0cc6-c229-46ca-974b-ed8cb2b5d5ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""hackDirection"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d41e8cc6-f0a5-4d64-b135-7e5433b38655"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""74a37704-95d7-41bd-a178-f90badf1e6ba"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8187f5de-b6f0-4f6e-a814-a1124df965f2"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30be72d1-30ce-48e3-aa76-32f91b036399"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""hack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3454cd75-ad46-4aa5-9531-800fc03b3ee8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""hack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9f1a2ee-e589-4195-88f3-118d8282c227"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""hackDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21447ab3-5393-4a27-ae78-45de43cee0bc"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""hackDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b39bdff-57b9-4a68-9c04-8a8fce256991"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcd3a504-7cfd-43da-9a4b-8e504a953c24"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""dead_perso"",
            ""id"": ""3c773e63-2b52-4744-844d-922cc5c58b7a"",
            ""actions"": [
                {
                    ""name"": ""revive"",
                    ""type"": ""Button"",
                    ""id"": ""a3921c8e-6aa7-43d1-993e-eb9544973c3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""903462bb-7fac-4129-a165-ddb6a2241c9a"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b5af530-baeb-49fc-9d8f-7bfa1ba93a37"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b701690c-00b5-4f24-9405-ea881d2d0759"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b309b744-a9db-4b0b-90e6-5189016e34b9"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9469c814-4ee1-4bc3-8cf7-a9bc38e9fbae"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b92e939c-156f-4cf5-ac78-e765ad893eef"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""997a2735-98a3-4c49-bc24-3950526e5ef6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5914de72-bd2c-43b0-805d-db5f951de793"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0c3bf8b-b9de-4ce3-bb50-b0b6fbd8d6b7"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""revive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""any"",
            ""id"": ""b1da777d-2f34-478e-a36e-cbf8e11ead69"",
            ""actions"": [
                {
                    ""name"": ""keyboard"",
                    ""type"": ""Button"",
                    ""id"": ""6e57fb60-629f-48f4-bdf3-7f45b10dc40c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""gamepad"",
                    ""type"": ""Button"",
                    ""id"": ""dbd36913-9d8c-4b0f-8abf-e0807a05608e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1d5b2ca5-9020-4d69-b8cc-22be0fd6a5e6"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c96d260-1a5e-4d2e-9e03-0185e5622064"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6160e4d3-f089-4f6c-9438-7abd69ccfc31"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8e4fcf1-bad4-4b5f-8e63-1ac1eeef3327"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3f9e357-7a48-44aa-95af-d357d05c2df0"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""561714bc-c23f-4a9b-8dc6-7a8a99ba80f6"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d45d388-4bd1-4565-8ad1-449cde8eab58"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdcf5022-a51c-451f-810c-75272545fb8e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c66983f9-09ea-450d-aee9-e90c857a47a2"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba978914-6a53-4ea5-8a51-5df86ba9132e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea21c2c4-cb2c-4d5f-a7b0-3d0815197173"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""148efc5d-3697-49f9-82ae-78d16b5cb058"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aca169ff-c178-4d33-8ce5-bccc0482ee68"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""294eda9d-98e3-4c12-a59f-71789739f982"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce8d2aed-6244-4fa3-98e0-6d96ca10e94d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1d74cc3-1089-48f1-b2ac-caa63ed16cf0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c86cfd5f-4355-448a-844e-a889ff3be460"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab4b4545-a3d0-46dc-8531-273b5a52d23c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1058e1c-2813-41f5-8db7-5f917e01ca5f"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bda0c4d8-aef0-433a-9aec-75814f3bd370"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09bab292-7f47-4cfe-914c-1e522dd0a368"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""633c244f-16bc-45f4-837c-9ec75aaf4099"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d91f3136-86d0-4012-825b-1e0263b46e1a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4a53adb-d1fc-4e1f-b599-bfb95736ab5b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fce0293-509b-4908-b938-e8d90cf4b3be"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d006b759-b75f-42b0-baaa-ef9df26daad2"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""285c888d-efa7-4ced-9ee0-8dbb6463d43f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5e6230f-8733-4125-aa5f-7ab8129cb90b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""365de825-265c-49d4-a60a-416612c66f10"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f50780fd-ab1c-43cb-b8fd-0c241c5b1dbd"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62c82b2e-da86-4c0d-b84f-3f38e32a7c68"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41f78594-5454-42a1-b25f-04e178aa3f4f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""beac541a-11b5-4daf-b4bc-6a472bd9de4e"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4919853-a48f-484b-a35a-b5bc234368ce"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""map"",
            ""id"": ""1d12c9ec-53fc-4e76-b747-b101fc6248f5"",
            ""actions"": [
                {
                    ""name"": ""zoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""570598f1-aa91-4935-88c9-2061e1b4b03d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9b77e55f-aa18-46b1-b854-d1b234d4f1fd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eda0786b-1aab-4770-bd26-6917598ae6b7"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""sz"",
                    ""id"": ""d0271d57-e021-42e0-861a-7b9ed3fa8b4c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3a571c8b-cccc-41da-a555-f9bb35c30907"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""18938bc7-5323-40ab-926c-4fc238a92e8f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ac8bbae2-e325-491a-b0b3-f9bdeca80991"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""xbox"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""zqsd"",
                    ""id"": ""646cb3e8-373f-495b-85aa-1a6afe85b733"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5d5d198c-2b3a-4960-a169-458a21ba1893"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6a8d9c7e-9e25-41a1-a568-4b6c5d4d3acc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e380b820-b995-4096-8b78-f5cbc71edf43"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""978a842d-8858-48b4-8f9d-faf82e56072f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""xbox"",
            ""bindingGroup"": ""xbox"",
            ""devices"": [
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""keyboard"",
            ""bindingGroup"": ""keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // perso
        m_perso = asset.FindActionMap("perso", throwIfNotFound: true);
        m_perso_move = m_perso.FindAction("move", throwIfNotFound: true);
        m_perso_interact = m_perso.FindAction("interact", throwIfNotFound: true);
        m_perso_inventory = m_perso.FindAction("inventory", throwIfNotFound: true);
        m_perso_map = m_perso.FindAction("map", throwIfNotFound: true);
        m_perso_hit = m_perso.FindAction("hit", throwIfNotFound: true);
        m_perso_run = m_perso.FindAction("run", throwIfNotFound: true);
        m_perso_useConso = m_perso.FindAction("useConso", throwIfNotFound: true);
        m_perso_randomTalk = m_perso.FindAction("randomTalk", throwIfNotFound: true);
        m_perso_pause = m_perso.FindAction("pause", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_navigate = m_UI.FindAction("navigate", throwIfNotFound: true);
        m_UI_activate = m_UI.FindAction("activate", throwIfNotFound: true);
        // enhanced_perso
        m_enhanced_perso = asset.FindActionMap("enhanced_perso", throwIfNotFound: true);
        m_enhanced_perso_dash = m_enhanced_perso.FindAction("dash", throwIfNotFound: true);
        m_enhanced_perso_dodge = m_enhanced_perso.FindAction("dodge", throwIfNotFound: true);
        m_enhanced_perso_hack = m_enhanced_perso.FindAction("hack", throwIfNotFound: true);
        m_enhanced_perso_hackDirection = m_enhanced_perso.FindAction("hackDirection", throwIfNotFound: true);
        // dead_perso
        m_dead_perso = asset.FindActionMap("dead_perso", throwIfNotFound: true);
        m_dead_perso_revive = m_dead_perso.FindAction("revive", throwIfNotFound: true);
        // any
        m_any = asset.FindActionMap("any", throwIfNotFound: true);
        m_any_keyboard = m_any.FindAction("keyboard", throwIfNotFound: true);
        m_any_gamepad = m_any.FindAction("gamepad", throwIfNotFound: true);
        // map
        m_map = asset.FindActionMap("map", throwIfNotFound: true);
        m_map_zoom = m_map.FindAction("zoom", throwIfNotFound: true);
        m_map_move = m_map.FindAction("move", throwIfNotFound: true);
    }

    ~@PlayerInputActions()
    {
        UnityEngine.Debug.Assert(!m_perso.enabled, "This will cause a leak and performance issues, PlayerInputActions.perso.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, PlayerInputActions.UI.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_enhanced_perso.enabled, "This will cause a leak and performance issues, PlayerInputActions.enhanced_perso.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_dead_perso.enabled, "This will cause a leak and performance issues, PlayerInputActions.dead_perso.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_any.enabled, "This will cause a leak and performance issues, PlayerInputActions.any.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_map.enabled, "This will cause a leak and performance issues, PlayerInputActions.map.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // perso
    private readonly InputActionMap m_perso;
    private List<IPersoActions> m_PersoActionsCallbackInterfaces = new List<IPersoActions>();
    private readonly InputAction m_perso_move;
    private readonly InputAction m_perso_interact;
    private readonly InputAction m_perso_inventory;
    private readonly InputAction m_perso_map;
    private readonly InputAction m_perso_hit;
    private readonly InputAction m_perso_run;
    private readonly InputAction m_perso_useConso;
    private readonly InputAction m_perso_randomTalk;
    private readonly InputAction m_perso_pause;
    public struct PersoActions
    {
        private @PlayerInputActions m_Wrapper;
        public PersoActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @move => m_Wrapper.m_perso_move;
        public InputAction @interact => m_Wrapper.m_perso_interact;
        public InputAction @inventory => m_Wrapper.m_perso_inventory;
        public InputAction @map => m_Wrapper.m_perso_map;
        public InputAction @hit => m_Wrapper.m_perso_hit;
        public InputAction @run => m_Wrapper.m_perso_run;
        public InputAction @useConso => m_Wrapper.m_perso_useConso;
        public InputAction @randomTalk => m_Wrapper.m_perso_randomTalk;
        public InputAction @pause => m_Wrapper.m_perso_pause;
        public InputActionMap Get() { return m_Wrapper.m_perso; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PersoActions set) { return set.Get(); }
        public void AddCallbacks(IPersoActions instance)
        {
            if (instance == null || m_Wrapper.m_PersoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PersoActionsCallbackInterfaces.Add(instance);
            @move.started += instance.OnMove;
            @move.performed += instance.OnMove;
            @move.canceled += instance.OnMove;
            @interact.started += instance.OnInteract;
            @interact.performed += instance.OnInteract;
            @interact.canceled += instance.OnInteract;
            @inventory.started += instance.OnInventory;
            @inventory.performed += instance.OnInventory;
            @inventory.canceled += instance.OnInventory;
            @map.started += instance.OnMap;
            @map.performed += instance.OnMap;
            @map.canceled += instance.OnMap;
            @hit.started += instance.OnHit;
            @hit.performed += instance.OnHit;
            @hit.canceled += instance.OnHit;
            @run.started += instance.OnRun;
            @run.performed += instance.OnRun;
            @run.canceled += instance.OnRun;
            @useConso.started += instance.OnUseConso;
            @useConso.performed += instance.OnUseConso;
            @useConso.canceled += instance.OnUseConso;
            @randomTalk.started += instance.OnRandomTalk;
            @randomTalk.performed += instance.OnRandomTalk;
            @randomTalk.canceled += instance.OnRandomTalk;
            @pause.started += instance.OnPause;
            @pause.performed += instance.OnPause;
            @pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IPersoActions instance)
        {
            @move.started -= instance.OnMove;
            @move.performed -= instance.OnMove;
            @move.canceled -= instance.OnMove;
            @interact.started -= instance.OnInteract;
            @interact.performed -= instance.OnInteract;
            @interact.canceled -= instance.OnInteract;
            @inventory.started -= instance.OnInventory;
            @inventory.performed -= instance.OnInventory;
            @inventory.canceled -= instance.OnInventory;
            @map.started -= instance.OnMap;
            @map.performed -= instance.OnMap;
            @map.canceled -= instance.OnMap;
            @hit.started -= instance.OnHit;
            @hit.performed -= instance.OnHit;
            @hit.canceled -= instance.OnHit;
            @run.started -= instance.OnRun;
            @run.performed -= instance.OnRun;
            @run.canceled -= instance.OnRun;
            @useConso.started -= instance.OnUseConso;
            @useConso.performed -= instance.OnUseConso;
            @useConso.canceled -= instance.OnUseConso;
            @randomTalk.started -= instance.OnRandomTalk;
            @randomTalk.performed -= instance.OnRandomTalk;
            @randomTalk.canceled -= instance.OnRandomTalk;
            @pause.started -= instance.OnPause;
            @pause.performed -= instance.OnPause;
            @pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IPersoActions instance)
        {
            if (m_Wrapper.m_PersoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPersoActions instance)
        {
            foreach (var item in m_Wrapper.m_PersoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PersoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PersoActions @perso => new PersoActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_navigate;
    private readonly InputAction m_UI_activate;
    public struct UIActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @navigate => m_Wrapper.m_UI_navigate;
        public InputAction @activate => m_Wrapper.m_UI_activate;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @navigate.started += instance.OnNavigate;
            @navigate.performed += instance.OnNavigate;
            @navigate.canceled += instance.OnNavigate;
            @activate.started += instance.OnActivate;
            @activate.performed += instance.OnActivate;
            @activate.canceled += instance.OnActivate;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @navigate.started -= instance.OnNavigate;
            @navigate.performed -= instance.OnNavigate;
            @navigate.canceled -= instance.OnNavigate;
            @activate.started -= instance.OnActivate;
            @activate.performed -= instance.OnActivate;
            @activate.canceled -= instance.OnActivate;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // enhanced_perso
    private readonly InputActionMap m_enhanced_perso;
    private List<IEnhanced_persoActions> m_Enhanced_persoActionsCallbackInterfaces = new List<IEnhanced_persoActions>();
    private readonly InputAction m_enhanced_perso_dash;
    private readonly InputAction m_enhanced_perso_dodge;
    private readonly InputAction m_enhanced_perso_hack;
    private readonly InputAction m_enhanced_perso_hackDirection;
    public struct Enhanced_persoActions
    {
        private @PlayerInputActions m_Wrapper;
        public Enhanced_persoActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @dash => m_Wrapper.m_enhanced_perso_dash;
        public InputAction @dodge => m_Wrapper.m_enhanced_perso_dodge;
        public InputAction @hack => m_Wrapper.m_enhanced_perso_hack;
        public InputAction @hackDirection => m_Wrapper.m_enhanced_perso_hackDirection;
        public InputActionMap Get() { return m_Wrapper.m_enhanced_perso; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Enhanced_persoActions set) { return set.Get(); }
        public void AddCallbacks(IEnhanced_persoActions instance)
        {
            if (instance == null || m_Wrapper.m_Enhanced_persoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Enhanced_persoActionsCallbackInterfaces.Add(instance);
            @dash.started += instance.OnDash;
            @dash.performed += instance.OnDash;
            @dash.canceled += instance.OnDash;
            @dodge.started += instance.OnDodge;
            @dodge.performed += instance.OnDodge;
            @dodge.canceled += instance.OnDodge;
            @hack.started += instance.OnHack;
            @hack.performed += instance.OnHack;
            @hack.canceled += instance.OnHack;
            @hackDirection.started += instance.OnHackDirection;
            @hackDirection.performed += instance.OnHackDirection;
            @hackDirection.canceled += instance.OnHackDirection;
        }

        private void UnregisterCallbacks(IEnhanced_persoActions instance)
        {
            @dash.started -= instance.OnDash;
            @dash.performed -= instance.OnDash;
            @dash.canceled -= instance.OnDash;
            @dodge.started -= instance.OnDodge;
            @dodge.performed -= instance.OnDodge;
            @dodge.canceled -= instance.OnDodge;
            @hack.started -= instance.OnHack;
            @hack.performed -= instance.OnHack;
            @hack.canceled -= instance.OnHack;
            @hackDirection.started -= instance.OnHackDirection;
            @hackDirection.performed -= instance.OnHackDirection;
            @hackDirection.canceled -= instance.OnHackDirection;
        }

        public void RemoveCallbacks(IEnhanced_persoActions instance)
        {
            if (m_Wrapper.m_Enhanced_persoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IEnhanced_persoActions instance)
        {
            foreach (var item in m_Wrapper.m_Enhanced_persoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Enhanced_persoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Enhanced_persoActions @enhanced_perso => new Enhanced_persoActions(this);

    // dead_perso
    private readonly InputActionMap m_dead_perso;
    private List<IDead_persoActions> m_Dead_persoActionsCallbackInterfaces = new List<IDead_persoActions>();
    private readonly InputAction m_dead_perso_revive;
    public struct Dead_persoActions
    {
        private @PlayerInputActions m_Wrapper;
        public Dead_persoActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @revive => m_Wrapper.m_dead_perso_revive;
        public InputActionMap Get() { return m_Wrapper.m_dead_perso; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Dead_persoActions set) { return set.Get(); }
        public void AddCallbacks(IDead_persoActions instance)
        {
            if (instance == null || m_Wrapper.m_Dead_persoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Dead_persoActionsCallbackInterfaces.Add(instance);
            @revive.started += instance.OnRevive;
            @revive.performed += instance.OnRevive;
            @revive.canceled += instance.OnRevive;
        }

        private void UnregisterCallbacks(IDead_persoActions instance)
        {
            @revive.started -= instance.OnRevive;
            @revive.performed -= instance.OnRevive;
            @revive.canceled -= instance.OnRevive;
        }

        public void RemoveCallbacks(IDead_persoActions instance)
        {
            if (m_Wrapper.m_Dead_persoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDead_persoActions instance)
        {
            foreach (var item in m_Wrapper.m_Dead_persoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Dead_persoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Dead_persoActions @dead_perso => new Dead_persoActions(this);

    // any
    private readonly InputActionMap m_any;
    private List<IAnyActions> m_AnyActionsCallbackInterfaces = new List<IAnyActions>();
    private readonly InputAction m_any_keyboard;
    private readonly InputAction m_any_gamepad;
    public struct AnyActions
    {
        private @PlayerInputActions m_Wrapper;
        public AnyActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @keyboard => m_Wrapper.m_any_keyboard;
        public InputAction @gamepad => m_Wrapper.m_any_gamepad;
        public InputActionMap Get() { return m_Wrapper.m_any; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AnyActions set) { return set.Get(); }
        public void AddCallbacks(IAnyActions instance)
        {
            if (instance == null || m_Wrapper.m_AnyActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AnyActionsCallbackInterfaces.Add(instance);
            @keyboard.started += instance.OnKeyboard;
            @keyboard.performed += instance.OnKeyboard;
            @keyboard.canceled += instance.OnKeyboard;
            @gamepad.started += instance.OnGamepad;
            @gamepad.performed += instance.OnGamepad;
            @gamepad.canceled += instance.OnGamepad;
        }

        private void UnregisterCallbacks(IAnyActions instance)
        {
            @keyboard.started -= instance.OnKeyboard;
            @keyboard.performed -= instance.OnKeyboard;
            @keyboard.canceled -= instance.OnKeyboard;
            @gamepad.started -= instance.OnGamepad;
            @gamepad.performed -= instance.OnGamepad;
            @gamepad.canceled -= instance.OnGamepad;
        }

        public void RemoveCallbacks(IAnyActions instance)
        {
            if (m_Wrapper.m_AnyActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAnyActions instance)
        {
            foreach (var item in m_Wrapper.m_AnyActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AnyActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AnyActions @any => new AnyActions(this);

    // map
    private readonly InputActionMap m_map;
    private List<IMapActions> m_MapActionsCallbackInterfaces = new List<IMapActions>();
    private readonly InputAction m_map_zoom;
    private readonly InputAction m_map_move;
    public struct MapActions
    {
        private @PlayerInputActions m_Wrapper;
        public MapActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @zoom => m_Wrapper.m_map_zoom;
        public InputAction @move => m_Wrapper.m_map_move;
        public InputActionMap Get() { return m_Wrapper.m_map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MapActions set) { return set.Get(); }
        public void AddCallbacks(IMapActions instance)
        {
            if (instance == null || m_Wrapper.m_MapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MapActionsCallbackInterfaces.Add(instance);
            @zoom.started += instance.OnZoom;
            @zoom.performed += instance.OnZoom;
            @zoom.canceled += instance.OnZoom;
            @move.started += instance.OnMove;
            @move.performed += instance.OnMove;
            @move.canceled += instance.OnMove;
        }

        private void UnregisterCallbacks(IMapActions instance)
        {
            @zoom.started -= instance.OnZoom;
            @zoom.performed -= instance.OnZoom;
            @zoom.canceled -= instance.OnZoom;
            @move.started -= instance.OnMove;
            @move.performed -= instance.OnMove;
            @move.canceled -= instance.OnMove;
        }

        public void RemoveCallbacks(IMapActions instance)
        {
            if (m_Wrapper.m_MapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMapActions instance)
        {
            foreach (var item in m_Wrapper.m_MapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MapActions @map => new MapActions(this);
    private int m_xboxSchemeIndex = -1;
    public InputControlScheme xboxScheme
    {
        get
        {
            if (m_xboxSchemeIndex == -1) m_xboxSchemeIndex = asset.FindControlSchemeIndex("xbox");
            return asset.controlSchemes[m_xboxSchemeIndex];
        }
    }
    private int m_keyboardSchemeIndex = -1;
    public InputControlScheme keyboardScheme
    {
        get
        {
            if (m_keyboardSchemeIndex == -1) m_keyboardSchemeIndex = asset.FindControlSchemeIndex("keyboard");
            return asset.controlSchemes[m_keyboardSchemeIndex];
        }
    }
    public interface IPersoActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnMap(InputAction.CallbackContext context);
        void OnHit(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnUseConso(InputAction.CallbackContext context);
        void OnRandomTalk(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
    }
    public interface IEnhanced_persoActions
    {
        void OnDash(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnHack(InputAction.CallbackContext context);
        void OnHackDirection(InputAction.CallbackContext context);
    }
    public interface IDead_persoActions
    {
        void OnRevive(InputAction.CallbackContext context);
    }
    public interface IAnyActions
    {
        void OnKeyboard(InputAction.CallbackContext context);
        void OnGamepad(InputAction.CallbackContext context);
    }
    public interface IMapActions
    {
        void OnZoom(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
    }
}
